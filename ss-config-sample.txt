#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://lemp.redshift.network/ss-config-sample.txt #####################################
#### path: /var/www/ss-config-sample ###############################################################
#### destination: /var/www/ss-config (manual configuration is required) ############################
#### purpose: SlickStack configuration file (must be configured before running ss-install) #########
#### module version: Ubuntu 18.04 LTS ##############################################################
####################################################################################################

## AFTER MAKING ANY CHANGES TO SS-CONFIG YOU MUST RUN SS-INSTALL AGAIN ##

####################################################################################################
#### SlickStack: SS-Config Build Version (Checked By SS-Install To Verify Freshness) ###############
####################################################################################################

## rebuild ss-config if outdated errors: http://lemp.redshift.network/ss-config-sample.txt ##
## copy and paste entire ss-config boilerplate before modifying variables ##

SS_BUILD="DEC2019E"

####################################################################################################
#### SS-Config: Ubuntu Root + Sudo User Settings (Console + SSH Access) ############################
####################################################################################################

## MODULE VERSION: Ubuntu 18.04 LTS

## write down your sudo password or you will be locked out of your server forever ##
## after ss-install completes the root user will have no shell access ##

## ROOT_PASSWORD = [*must be unique*] choose something very strong as you won't use this ##
## SUDO_USER = [*must be unique*] something strong you can remember for shell logins ##
## SUDO_PASSWORD = [*must be unique*] write this down because you will need it ##
## SSH_PORT = [6969|22|etc] best not to use port 22 for increased shell security ##

ROOT_PASSWORD="password"
SUDO_USER="example"
SUDO_PASSWORD="password"
SSH_PORT="6969"

####################################################################################################
#### SS-Config: Ubuntu Jailed User Settings (SFTP Access Only = For Your Client, Etc) ##############
####################################################################################################

## MODULE VERSION: Ubuntu 18.04 LTS

## SFTP user is jailed to the /var/www/ directory e.g. for your client to safely access ##
## you can also use the SFTP user for remote backups (safer than sudo user) ##

## SFTP_USER = [*must be unique*] username that your client can login as via SFTP ##
## SFTP_PASSWORD = [*must be unique*] something strong but not too complex or confusing ##

SFTP_USER="example"
SFTP_PASSWORD="password"

####################################################################################################
#### SS-Config: WordPress Database Settings (Single Database Only) #################################
####################################################################################################

## MODULE VERSION: WordPress 5.3.x + MySQL 5.7.x

## using a remote MySQL database has not been extensively tested (use at your own risk) ##
## for security reasons choose a different password for the MySQL root user ##

## DB_NAME = [wordpress|etc] only one database is supported so keep it simple and easy ##
## DB_USER = [example|etc] for easier management it can be the same as SFTP_USER ##
## DB_PASSWORD = [*must be unique*] something strong but not too complex or confusing ##
## DB_PASSWORD_ROOT = [*must be unique*] something very strong is preferrable ##
## DB_HOST = [127.0.0.1|111.222.333.444|etc] if using a remote database server enter here ##
## DB_PREFIX = [wp_|etc] for easier management the default wp_ prefix recommended ##
## DB_CHARSET = [utf8mb4|etc] most databases these days should be using utf8mb4 ##
## DB_COLLATE = [NULL|etc] leave it blank unless you really know what you are doing ##

DB_NAME="wordpress"
DB_USER="example"
DB_PASSWORD="password"
DB_PASSWORD_ROOT="password"
DB_HOST="127.0.0.1"
DB_PREFIX="wp_"
DB_CHARSET="utf8mb4"
DB_COLLATE=""

####################################################################################################
#### SS-Config: WordPress + Nginx Domain Settings (Subdirectories Not Allowed) #####################
####################################################################################################

## MODULE VERSION: WordPress 5.3.x + Nginx 1.17.x

## below domain values are used in order to hardcode Nginx and WordPress configuration ##
## database domain settings will have no effect after the ss-install completes ##

## SITE_TLD = [example.com] w/o prefixes (required for all WP installations) ##
## SITE_DOMAIN = [www.example.com|sub.example.com] w/o suffixes (for WP single sites) ##
## SITE_NOINDEX = [false|true] Nginx header (noindex + nofollow + noarchive + nosnippet) ##

SITE_TLD="example.com"
SITE_DOMAIN="www.example.com"
SITE_NOINDEX="false"

####################################################################################################
#### SS-Config: CloudFlare API + Various Settings (MU Plugin) ######################################
####################################################################################################

## MODULE VERSION: CloudFlare API v4

## these settings are to control CloudFlare from the WP Admin for easier management ##
## for better security and optimized performance use recommended settings ##

## CLOUDFLARE_API_KEY = [*must be unique*] find your API key in your CloudFlare account ##
## CLOUDFLARE_API_EMAIL = [*must be unique*] the email address of your CloudFlare account ##
## CLOUDFLARE_WIDGET_DNS = [true|false] if you want to see DNS records in WP Admin ##
## CLOUDFLARE_WIDGET_ANALYTICS = [true|false] if you want traffic stats in WP Admin ##
## CLOUDFLARE_RECOMMENDED_SETTINGS = [true|false] hardcodes certain CloudFlare settings ##

CLOUDFLARE_API_KEY="123456789"
CLOUDFLARE_API_EMAIL="user@example.com"
CLOUDFLARE_WIDGET_DNS="true"
# CLOUDFLARE_WIDGET_ANALYTICS="true"
# CLOUDFLARE_RECOMMENDED_SETTINGS="true"

####################################################################################################
#### SS-Config: WordPress Multisite Settings (Subdomains Option Recommended) #######################
####################################################################################################

## MODULE VERSION: WordPress 5.3.x

## Multisite setups should not be used for high-traffic or business-critical websites ##
## domain mapping on Multisite installations requires the subdomains approach ##

# WP_MULTISITE="false"
# WP_MULTISITE_SUBDOMAINS="true"

####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################
######## ADVANCED SETTINGS BELOW (MOST SLICKSTACK SERVERS SHOULD NOT CHANGE THESE) #################
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################

## most websites should be fine using the default settings that are pre-configured below ##
## only advanced users with sysadmin experience should mess around with these ##

####################################################################################################
#### SS-Config: Select WordPress Core (WP-Config) Settings #########################################
####################################################################################################

## MODULE VERSION: WordPress 5.3.x

## for stability reasons several WP defined constants are hard-coded in the wp-config ##
## define additional constants using the included Custom Functions MU plugin ##

WP_LANG="en-US"
WP_POST_REVISIONS="3"
WP_AUTOSAVE_INTERVAL="60"
WP_HTTP_BLOCK_EXTERNAL="false"
WP_ACCESSIBLE_HOSTS="api.wordpress.org"
WP_AUTO_UPDATE_CORE="minor"
WP_DISALLOW_FILE_EDIT="false"
WP_DISALLOW_FILE_MODS="false"
WP_ALLOW_UNFILTERED_UPLOADS="true"

####################################################################################################
#### SS-Config: OpenSSL + Cerbot (Let's Encrypt) SSL Settings (CSR Optional) #######################
####################################################################################################

## MODULE VERSION: OpenSSL 1.1.0g + Certbot 0.23.0

## we recommend OpenSSL because it is infinitely simpler and more reliable to maintain ##
## even if you choose Cerbot you will still need CloudFlare active during setup ##

## SSL_TYPE = [openssl|certbot] OpenSSL is easier to manage (CloudFlare required if chosen) ##
## SSL_PROTOCOLS = [TLSv1.2|TLSv1.3|etc] for compliance needs (TLSv1.2 recommended) ##
## SSL_SESSION_TIMEOUT =
## SSL_SESSION_CACHE =
## SSL_BUFFER_SIZE =
## SSL_EMAIL = [user@example.com] the admin user email address for Cerbot (optional) ##
## SSL_EMAIL_ALERTS = [false|true] receive Certbot email notifications (not recommended) ##
## SSL_CHALLENGE_TYPE = [http|dns] which method of verifying your domain do you want ##

SSL_TYPE="openssl"
SSL_PROTOCOLS="TLSv1.2 TLSv1.3"
SSL_CIPHERS="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
SSL_SESSION_TIMEOUT="1d"
SSL_SESSION_CACHE="shared:SSL:64m"
SSL_BUFFER_SIZE="16k"
SSL_EMAIL="user@example.com"
SSL_EMAIL_ALERTS="false"
# SSL_CHALLENGE_TYPE="http"

## CSR_COUNTRY = [US|etc] country to be used with your SSL CSR request data ##
## CSR_STATE = [Nevada|etc] state or province to be used with your SSL CSR request data ##
## CSR_CITY = [Las Vegas|etc] city or town to be used with your SSL CSR request data ##
## CSR_COMPANY = [Example, LLC|etc] company name to be used with your SSL CSR request data ##
## CSR_DEPT = [Marketing|etc] department to be used with your SSL CSR request data ##

CSR_COUNTRY="US"
CSR_STATE="Nevada"
CSR_CITY="Las Vegas"
CSR_COMPANY="Example, LLC"
CSR_DEPT="Marketing"

####################################################################################################
#### SS-Config: Select Nginx + Open File Cache Settings ############################################
####################################################################################################

## MODULE VERSION: Nginx 1.17.x

## default Nginx settings assume that CloudFlare is in front of your origin VPS server ##
## this means that most settings are very liberal to allow for traffic scaling ##

## NGINX_WORKER_RLIMIT_NOFILE =
## NGINX_WORKER_CONNECTIONS =
## NGINX_SERVER_NAMES_HASH_BUCKET_SIZE = 
## NGINX_SERVER_NAMES_MAX_HASH_SIZE =
## NGINX_TYPES_MAX_HASH_SIZE =
## NGINX_CLIENT_MAX_BODY_SIZE =
## NGINX_CLIENT_BODY_BUFFER_SIZE =
## NGINX_CLIENT_HEADER_BUFFER_SIZE =
## NGINX_LARGE_CLIENT_HEADER_BUFFERS =
## NGINX_CLIENT_BODY_TIMEOUT =
## NGINX_CLIENT_HEADER_TIMEOUT =
## NGINX_KEEPALIVE_TIMEOUT =
## NGINX_KEEPALIVE_REQUESTS =
## NGINX_SEND_TIMEOUT =

NGINX_WORKER_RLIMIT_NOFILE="65535"
NGINX_WORKER_CONNECTIONS="8192"
NGINX_SERVER_NAMES_HASH_BUCKET_SIZE="64"
NGINX_SERVER_NAMES_MAX_HASH_SIZE="512"
NGINX_TYPES_MAX_HASH_SIZE="2048"
NGINX_CLIENT_MAX_BODY_SIZE="512M"
NGINX_CLIENT_BODY_BUFFER_SIZE="16k"
NGINX_CLIENT_HEADER_BUFFER_SIZE="4k"
NGINX_LARGE_CLIENT_HEADER_BUFFERS="4 64k"
NGINX_CLIENT_BODY_TIMEOUT="15s"
NGINX_CLIENT_HEADER_TIMEOUT="15s"
NGINX_KEEPALIVE_TIMEOUT="90s"
NGINX_KEEPALIVE_REQUESTS="65535"
NGINX_SEND_TIMEOUT="120s"

## OPEN_FILE_CACHE_MAX =
## OPEN_FILE_CACHE_INACTIVE =
## OPEN_FILE_CACHE_VALID =
## OPEN_FILE_CACHE_MIN_USES =
## OPEN_FILE_CACHE_ERRORS =

OPEN_FILE_CACHE_MAX="200000"
OPEN_FILE_CACHE_INACTIVE="20s"
OPEN_FILE_CACHE_VALID="30s"
OPEN_FILE_CACHE_MIN_USES="2"
OPEN_FILE_CACHE_ERRORS="on"

####################################################################################################
#### SS-Config: FastCGI Cache (Nginx) + TMPFS (RAM Disk) Settings ##################################
####################################################################################################

## MODULE VERSION: Nginx 1.17.x + Ubuntu 18.04 LTS

## nearly every WordPress site should be using FastCGI Cache at least for micro-caching ##
## Nginx pre-configured to skip cache on /cart* /checkout* /account* pages (etc) ##

## FCGI_CACHE = [true|false] recommended for nearly every WordPress site ##
## FCGI_CACHE_VALID = [60m|1440m|etc] longer is better (but dynamic sites need less) ##
## FCGI_CACHE_INACTIVE = [60m|1440m|etc] longer is better (but dynamic sites need less) ##
## FCGI_CACHE_MEMORY = [64m|128m|256m|512m|etc] for 512M|1GB|2GB|4GB RAM VPS ##
## FCGI_CACHE_MAX_SIZE = [2048m|4096m|8192m|16384m|etc] allocate space on disk ##
## FCGI_CONNECT_TIMEOUT =
## FCGI_READ_TIMEOUT =
## FCGI_SEND_TIMEOUT =
## FCGI_BUFFERS =
## FCGI_BUFFER_SIZE =
## FCGI_BUSY_BUFFERS_SIZE =
## FCGI_TEMP_FILE_WRITE_SIZE =
## FCGI_CACHE_TMPFS = [false|true] mount as TMPFS (not recommended) ##

FCGI_CACHE="true"
FCGI_CACHE_VALID="1440m"
FCGI_CACHE_INACTIVE="1440m"
FCGI_CACHE_MEMORY="256m"
FCGI_CACHE_MAX_SIZE="4096m"
FCGI_CONNECT_TIMEOUT="60s"
FCGI_READ_TIMEOUT="60s"
FCGI_SEND_TIMEOUT="60s"
FCGI_BUFFERS="32 32k"
FCGI_BUFFER_SIZE="32k"
FCGI_BUSY_BUFFERS_SIZE="256k"
FCGI_TEMP_FILE_WRITE_SIZE="256k"
FCGI_CACHE_TMPFS="false"
# FCGI_CACHE_QUERIES="true"
# FCGI_CACHE_QUERIES_SEARCH="true"

####################################################################################################
#### MySQL: SQL Mode + InnoDB Settings (Applies To Localhost Database Only) ########################
####################################################################################################

## MODULE VERSION: MySQL 5.7.x

## there are very few settings that need to be optimized in MySQL after version 5.7+ ##
## probably the SQL_MODE is the only setting that you might consider changing ##

## SQL_MODE = [*infinite options*] the preset mode is highly recommended ##
## INNODB_BUFFER_POOL_SIZE = [auto|256M|512M|1GB|2GB|4GB|etc] ~50-70% of total RAM ##
## INNODB_LOG_FILE_SIZE = [256M|512M|1GB|etc] bigger is better but slows crash recovery ##
## INNODB_LOG_FILES_IN_GROUP =
## INNODB_FLUSH_LOG_AT_TRX_COMMIT = [true|false] be a good boy and leave it on ##
## INNODB_FLUSH_METHOD = most servers should use O_DIRECT ##

SQL_MODE="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
INNODB_BUFFER_POOL_SIZE="auto"
INNODB_LOG_FILE_SIZE="256M"
INNODB_LOG_FILES_IN_GROUP="1"
INNODB_FLUSH_LOG_AT_TRX_COMMIT="true"
INNODB_FLUSH_METHOD="O_DIRECT" ## MySQL 8.0 = O_DIRECT_NO_FSYNC

####################################################################################################
#### PHP-FPM: General PHP Settings (php.ini) #######################################################
####################################################################################################

## MODULE VERSION: PHP-FPM 7.2.x

## many well-known PHP settings are hardcoded to ensure server stability and security ##
## below settings can be modified before ss-install to customize PHP as needed ##

## PHP_PRECISION = [14|etc] not many reasons to change from default value ##
## PHP_OUTPUT_BUFFERING = [4096|etc] keep in mind zlib.output_compression is disabled ##
## PHP_UNSERIALIZE_MAX_DEPTH = [4096|etc] new max depth setting for PHP 7.4 ##
## PHP_SERIALIZE_PRECISION = [-1|100|etc] only for uncommon situations ##
## PHP_DISABLE_FUNCTIONS = [*infinite options*] disable certain unsafe PHP functions ##
## PHP_DISABLE_CLASSES = [*infinite options*] disable certain unsafe PHP classes ##
## PHP_MAX_EXECUTION_TIME = [30|60|120|300|etc] most websites should use 30-60 ##
## PHP_MAX_INPUT_TIME = [30|60|120|300|etc] most websites should use 30-60 ##
## PHP_MAX_INPUT_NESTING_LEVEL = [64|etc] not many reasons to change default value (64) ##
## PHP_MAX_INPUT_VARS = [3000|5000|10000|etc] mostly to support extremely bloated themes ##
## PHP_MEMORY_LIMIT = [256M|512M|etc] should probably be 512M for most websites ##
## PHP_POST_MAX_SIZE = [256M|512M|etc] limit the size of post data ##
## PHP_UPLOAD_MAX_FILESIZE = [256M|512M|1024M|etc] limit the size of large uploads ##
## PHP_MAX_FILE_UPLOADS = [10|100|1000|etc] more relevant for community websites ##
## PHP_ALLOW_URL_FOPEN = [true|false] safe for most sites to keep this enabled ##
## PHP_DEFAULT_SOCKET_TIMEOUT = [60|etc] not many reasons to change this ##

PHP_PRECISION="14"
PHP_OUTPUT_BUFFERING="4096"
PHP_UNSERIALIZE_MAX_DEPTH="4096" ## PHP 7.4
PHP_SERIALIZE_PRECISION="-1"
PHP_DISABLE_FUNCTIONS=""
PHP_DISABLE_CLASSES=""
PHP_MAX_EXECUTION_TIME="60"
PHP_MAX_INPUT_TIME="60"
PHP_MAX_INPUT_NESTING_LEVEL="64"
PHP_MAX_INPUT_VARS="5000"
PHP_MEMORY_LIMIT="512M"
PHP_POST_MAX_SIZE="512M"
PHP_UPLOAD_MAX_FILESIZE="512M"
PHP_MAX_FILE_UPLOADS="100"
PHP_ALLOW_URL_FOPEN="true"
PHP_DEFAULT_SOCKET_TIMEOUT="60"

####################################################################################################
#### PHP-FPM: FastCGI Process Manager Settings (php-fpm.conf) ######################################
####################################################################################################

## MODULE VERSION: PHP-FPM 7.2.x

## the vast majority of SlickStack servers should not need to adjust any FPM settings ##
## in most cases the php.ini settings and www.conf settings are more relevant ##

## FPM_EMERGENCY_RESTART_THRESHOLD = [10|15|30|etc] keep enabled with reasonable value ##
## FPM_EMERGENCY_RESTART_INTERVAL = [1m|etc] keep it at 1m if you don't know ##
## FPM_PROCESS_CONTROL_TIMEOUT = [10|etc] keep it at 10 if you don't know ##
## FPM_PROCESS_MAX = [128|etc] only experts should modify this value ##
## FPM_PROCESS_PRIORITY = [-19|etc] only experts should modify this value ##
## FPM_RLIMIT_FILES = [1024|etc] 1024 is good for most sites ##
## FPM_RLIMIT_CORE = [0|etc] almost nobody should be changing this from 0 ##
## FPM_SYSTEMD_INTERVAL = [0|10|etc] most sites 10 is good but set 0 for small boost ##

FPM_EMERGENCY_RESTART_THRESHOLD="10"
FPM_EMERGENCY_RESTART_INTERVAL="1m"
FPM_PROCESS_CONTROL_TIMEOUT="10s"
FPM_PROCESS_MAX="128"
FPM_PROCESS_PRIORITY="-19"
FPM_RLIMIT_FILES="65535"
FPM_RLIMIT_CORE="0"
FPM_SYSTEMD_INTERVAL="10"

####################################################################################################
#### SS-Config: WWW Pool Settings ##################################################################
####################################################################################################

## MODULE VERSION: PHP-FPM 7.2.x

## modifying this tiny file can have drastic effects on scaling LEMP to high traffic ##
## ondemand is more efficient for most servers, be very careful tuning these ##

## WWW_LISTEN_BACKLOG = [65535|etc] most sites can leave this uncapped (e.g. 65535) ##
## WWW_PM_MODE = [ondemand|dynamic] dynamic for extremely high traffic (upgrade your VM) ##
## WWW_PM_MAX_CHILDREN = [20|etc] really depends on the rest of the settings you choose ##
## WWW_PM_START_SERVERS = [2|etc] keeping this number small usually makes more sense ##
## WWW_PM_MIN_SPARE_SERVERS = [1|etc] keep this at 1 to maximize CPU efficiency ##
## WWW_PM_MAX_SPARE_SERVERS = [3|etc] should usually be greater than PM_START_SERVERS ##
## WWW_PM_PROCESS_IDLE_TIMEOUT = [10s|etc] keep it small to avoid CPU resource abuse ##
## WWW_PM_MAX_REQUESTS = [500|etc] usually can keep it big if other settings are sensible ##
## WWW_REQUEST_TERMINATE_TIMEOUT = [300|etc] backup timeout if IDLE_TIMEOUT not applied ##
## WWW_RLIMIT_FILES = [65535|etc] most sites can leave this uncapped (e.g. 65535) ##
## WWW_RLIMIT_CORE = [0|etc] most sites can keep this disabled (e.g. 0) ##

WWW_LISTEN_BACKLOG="65535"
WWW_PM_MODE="ondemand"
WWW_PM_MAX_CHILDREN="20"
WWW_PM_START_SERVERS="2"
WWW_PM_MIN_SPARE_SERVERS="1"
WWW_PM_MAX_SPARE_SERVERS="3"
WWW_PM_PROCESS_IDLE_TIMEOUT="10s"
WWW_PM_MAX_REQUESTS="500"
WWW_REQUEST_TERMINATE_TIMEOUT="300"
WWW_RLIMIT_FILES="65535"
WWW_RLIMIT_CORE="0"

####################################################################################################
#### SS-Config: OPcache Settings (Always Enabled On Production Servers) ############################
####################################################################################################

## MODULE VERSION: PHP-FPM 7.2.x

## OPcache is one of the most powerful (and underrated) ways to scale cheap VPS servers ##
## high traffic sites that understand how it works can adjust it with big results ##

## OPCACHE_MEMORY_CONSUMPTION = [128|256|512|etc] how much RAM that OPcache can use ##
## OPCACHE_INTERNED_STRINGS_BUFFER = [16|32|64|etc] probably keep this at 64 ##
## OPCACHE_MAX_ACCELERATED_FILES = [10000|1000000|etc] must be between 200-1000000 files ##
## OPCACHE_MAX_WASTED_PERCENTAGE = [5|10|15|20|etc] careful not to set this too high ##
## OPCACHE_REVALIDATE_FREQUENCY = [2|15|60|etc] seconds before cache checks for changes ##
## OPCACHE_HUGE_CODE_PAGES = [false|true] enable Huge Pages (not recommended) ##

OPCACHE_MEMORY_CONSUMPTION="256"
OPCACHE_INTERNED_STRINGS_BUFFER="64"
OPCACHE_MAX_ACCELERATED_FILES="10000"
OPCACHE_MAX_WASTED_PERCENTAGE="5"
OPCACHE_REVALIDATE_FREQUENCY="2"
OPCACHE_HUGE_CODE_PAGES="false"

####################################################################################################
#### SS-Config: General SlickStack Settings ########################################################
####################################################################################################

## SS_APP = [wordpress] only WordPress currently supported (feedback? tell us!) ##
## SS_TYPE = [production|staging|dev] barely functional... enables debug, disables FastCGI Cache, disables OPcache, enables CloudFlare dev mode on non-production servers ##
## SS_TIMEZONE = [UTC|Greenwich|etc] almost nobody should have a reason to not use UTC ##
## SS_REBOOT = [false|true] server will reboot automatically after ss-update runs ##
## SS_DOS2UNIX = [false|true] converts any DOS files to Unix format whenever ss-perms runs ##

SS_APP="wordpress"
SS_TYPE="production"
SS_TIMEZONE="UTC"
SS_REBOOT="false"
SS_DOS2UNIX="false"
# SS_CLEAN_PHP_HACKS="true"

####################################################################################################
#### SS-Config: SlickStack Core Cron Job Schedules (Interval Settings) #############################
####################################################################################################

## modifying the below SlickStack intervals could affect server stability and updates ##
## disable any given cron job by setting interval to random string e.g. never ##

## SS_INTERVAL_CHECK = [often|regular|hourly] ##
## SS_INTERVAL_WORKER = [regular|hourly|quarter-daily] ##
## SS_INTERVAL_DUMP = [often|regular|hourly|quarter-daily|half-daily|daily] ##
## SS_INTERVAL_PERMS = [hourly|quarter-daily|half-daily|daily] ##
## SS_INTERVAL_CLEAN = [hourly|quarter-daily|half-daily|daily|weekly] ##
## SS_INTERVAL_MUPLUGS = [daily|weekly] ##
## SS_INTERVAL_SCAN = [daily|weekly] ##
## SS_INTERVAL_PURGE = [quarter-daily|half-daily|daily|weekly|monthly] ##
## SS_INTERVAL_ENCRYPT = [weekly|monthly] ##
## SS_INTERVAL_UPDATE = [monthly|sometimes] ##

SS_INTERVAL_CHECK="often"
SS_INTERVAL_WORKER="regular"
SS_INTERVAL_DUMP="hourly"
SS_INTERVAL_PERMS="quarter-daily"
SS_INTERVAL_CLEAN="half-daily"
SS_INTERVAL_MUPLUGS="daily"
SS_INTERVAL_SCAN="weekly"
SS_INTERVAL_PURGE="monthly"
SS_INTERVAL_ENCRYPT="never"
SS_INTERVAL_UPDATE="never"

####################################################################################################
#### SlickStack: Custom Config File Sources (Advanced Users Only) ##################################
####################################################################################################

## for custom configuration use the below settings to define configuration file sources ##
## source files must be publicly accessible via wget over either HTTP or HTTPS ##

PLUGIN_BLACKLIST_SOURCE="http://lemp.redshift.network/wordpress/blacklist.txt"
CUSTOM_FUNCTIONS_SOURCE="http://lemp.redshift.network/wordpress/functions.txt"
THROWAWAY_THEME_SOURCE="http://lemp.redshift.network/wordpress/throwaway.zip"

####################################################################################################
#### SS-Config: MU (Must-Use) WordPress Plugins ####################################################
####################################################################################################

## below you can specify the MU (Must-Use) plugins to install on this SlickStack server ##

MU_PLUGIN_01_SOURCE="http://lemp.redshift.network/mu-plugins/clear-caches.zip"
MU_PLUGIN_01_DIR="clear-caches"

MU_PLUGIN_02_SOURCE="http://lemp.redshift.network/mu-plugins/cloudflare.zip"
MU_PLUGIN_02_DIR="cloudflare"

MU_PLUGIN_03_SOURCE="http://lemp.redshift.network/mu-plugins/custom-functions.zip"
MU_PLUGIN_03_DIR="custom-functions"

MU_PLUGIN_04_SOURCE="http://lemp.redshift.network/mu-plugins/dashboard-cleanup.zip"
MU_PLUGIN_04_DIR="dashboard-cleanup"

MU_PLUGIN_05_SOURCE="http://lemp.redshift.network/mu-plugins/delete-expired-transients.zip"
MU_PLUGIN_05_DIR="delete-expired-transients"

MU_PLUGIN_06_SOURCE="http://lemp.redshift.network/mu-plugins/disable-attachment-pages.zip"
MU_PLUGIN_06_DIR="disable-attachment-pages"

MU_PLUGIN_07_SOURCE="http://lemp.redshift.network/mu-plugins/disable-embeds.zip"
MU_PLUGIN_07_DIR="disable-embeds"

MU_PLUGIN_08_SOURCE="http://lemp.redshift.network/mu-plugins/disable-emojis.zip"
MU_PLUGIN_08_DIR="disable-emojis"

MU_PLUGIN_09_SOURCE="http://lemp.redshift.network/mu-plugins/disable-empty-trash.zip"
MU_PLUGIN_09_DIR="disable-empty-trash"

MU_PLUGIN_10_SOURCE="http://lemp.redshift.network/mu-plugins/disable-gutenberg.zip"
MU_PLUGIN_10_DIR="disable-gutenberg"

MU_PLUGIN_11_SOURCE="http://lemp.redshift.network/mu-plugins/disable-image-compression.zip"
MU_PLUGIN_11_DIR="disable-image-compression"

MU_PLUGIN_12_SOURCE="http://lemp.redshift.network/mu-plugins/disable-post-via-email.zip"
MU_PLUGIN_12_DIR="disable-post-via-email"

MU_PLUGIN_13_SOURCE="http://lemp.redshift.network/mu-plugins/disable-xml-rpc.zip"
MU_PLUGIN_13_DIR="disable-xml-rpc"

## MU_PLUGIN_14_SOURCE="http://lemp.redshift.network/mu-plugins/error-log-monitor.zip"
## MU_PLUGIN_14_DIR="error-log-monitor"

MU_PLUGIN_15_SOURCE="http://lemp.redshift.network/mu-plugins/force-https.zip"
MU_PLUGIN_15_DIR="force-https"

MU_PLUGIN_16_SOURCE="http://lemp.redshift.network/mu-plugins/force-strong-hashing.zip"
MU_PLUGIN_16_DIR="force-strong-hashing"

MU_PLUGIN_17_SOURCE="http://lemp.redshift.network/mu-plugins/header-cleanup.zip"
MU_PLUGIN_17_DIR="header-cleanup"

MU_PLUGIN_18_SOURCE="http://lemp.redshift.network/mu-plugins/index-autoload.zip"
MU_PLUGIN_18_DIR="index-autoload"

MU_PLUGIN_19_SOURCE="http://lemp.redshift.network/mu-plugins/limit-heartbeat.zip"
MU_PLUGIN_19_DIR="limit-heartbeat"

MU_PLUGIN_20_SOURCE="http://lemp.redshift.network/mu-plugins/maintenance-mode.zip"
MU_PLUGIN_20_DIR="maintenance-mode"

MU_PLUGIN_21_SOURCE="http://lemp.redshift.network/mu-plugins/minify-html.zip"
MU_PLUGIN_21_DIR="minify-html"

MU_PLUGIN_22_SOURCE="http://lemp.redshift.network/mu-plugins/plugin-blacklist.zip"
MU_PLUGIN_22_DIR="plugin-blacklist"

MU_PLUGIN_23_SOURCE="http://lemp.redshift.network/mu-plugins/server-status.zip"
MU_PLUGIN_23_DIR="server-status"

MU_PLUGIN_24_SOURCE="http://lemp.redshift.network/mu-plugins/sftp-details.zip"
MU_PLUGIN_24_DIR="sftp-details"

MU_PLUGIN_25_SOURCE="http://lemp.redshift.network/mu-plugins/virtual-robotstxt.zip"
MU_PLUGIN_25_DIR="virtual-robotstxt"

####################################################################################################
#### SS-Config: Included WordPress Plugins (Not MU Plugins) ########################################
####################################################################################################

## these plugins will be added to your WP website whenever ss-install or ss-update runs ##
## the activation status of these plugins will not be effected or modified (ever) ##

# PLUGIN_01_SOURCE="http://lemp.redshift.network/mu-plugins/clear-caches.zip"
# PLUGIN_01_DIR="clear-caches"
# PLUGIN_02_SOURCE="http://lemp.redshift.network/mu-plugins/cloudflare.zip"
# PLUGIN_02_DIR="cloudflare"

####################################################################################################
#### Included Themes + Default Active Theme ########################################################
####################################################################################################

## these themes will be installed after Throwaway Theme setup completes (and is deleted) ##
## all default WordPress Core themes will be deleted (only below themes installed) ##

# THEME_01_SOURCE=""
# THEME_01_DIR=""

####################################################################################################
#### Superuser (MU Plugin): Various Settings #######################################################
####################################################################################################

# SUPERUSER_LOGIN
# SUPERUSER_PASSWORD
# SUPERUSER_EMAIL
# SUPERUSER_NICENAME

####################################################################################################
#### Email API Settings (SendGrid, Mailgun, Etc) ###################################################
####################################################################################################

# MAIL_API_KEY="123456789"
### MAIL_SERVICE="sendgrid"
# MAIL_SMTP_SERVER="smtp.sendgrid.net"
# MAIL_PORT="587"
# mailalert="user@example.com"
# MAIL_USER="example"
# MAIL_PASSWORD="password"
