####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://lemp.redshift.network/nginx/server-block-multisite-subdomains.txt ##############
#### path: n/a (boilerplate) #######################################################################
#### destination: /etc/nginx/sites-available/default (after install) ###############################
#### purpose: Nginx server block boilerplate (for WordPress Multisite installations only) ##########
#### module version: Nginx 1.17.x ##################################################################
####################################################################################################

## SLICKSTACK SUPPORTS HTTPS-ONLY NGINX SERVER BLOCKS WITH HSTS ENABLED BY DEFAULT ##

####################################################################################################
#### Server Block: Catch-All + Redirect To Canonical Domain ########################################
####################################################################################################

## here we force redirect any non-canonical requests to the canonical server block below ##
## this vastly improves security, prevents IP snooping, SEO problems, and beyond ##

server {
    listen            80 default_server;
    listen            443 ssl default_server;
    listen            [::]:80;
    listen            [::]:443 ssl;
    server_name       _;
    return 301        https://@SITE_DOMAIN$request_uri;
}

####################################################################################################
#### Server Block: WordPress Multisite Network (Subdomains + Single Database) ######################
####################################################################################################

## CloudFlare ignores HTTP/2 from origin server but we enable in case of Lets Encrypt ##
## because SlickStack is HTTPS-only the canonical block is port 443 (SSL) only ##

server {
	listen 443 ssl http2;
        listen [::]:443 ssl http2 ipv6only=on;
	server_name *.@SITE_DOMAIN @SITE_DOMAIN;
	
	## delete these lines if domain mapping is being used ##
#	if ($http_host != "*.@SITE_DOMAIN|@SITE_DOMAIN") {
#            return 301 $scheme://@SITE_DOMAIN$request_uri;
#   	}

	## uncomment for domain mapping ##
	#@WP_MULTISITE_DOMAIN_MAPPING# server_name_in_redirect off;
	
####################################################################################################
#### Server Block: WordPress Multisite Various Settings ############################################
####################################################################################################

## Multisite has some unique security and performance concerns that are addressed below ##
## lots of outdated code snippets floating around online but should be current ##

## NOTE: need to review the blogid map that rtCamp popularized ##
    
    ## location ^~ /files/ {
    ##    rewrite ^.*/files/(.+)$ /wp-includes/ms-files.php?file=$1 last;
    ## }
    ## location ~ ^/files/(.*)$ {
    ##     try_files /wp-content/blogs.dir/$blogid/$uri /wp-includes/ms-files.php?file=$1 ;
    ## }
    
    ## pass uploaded files to ms-files.php ##
    rewrite /files/$ /index.php last;
    
    if ($uri !~ wp-content/plugins) {
        rewrite /files/(.+)$ /wp-includes/ms-files.php?file=$1 last;
    }
    
    ## Rewrite multisite '.../wp-.*' and '.../*.php' ##
    if (!-e $request_filename) {
        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
	## not required if wp-admin trailing slash rule already implemented ##
	# rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ $1 last;
	# rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    }
    
    ## avoid php readfile() using x-sendfile ##
    location ^~ /blogs.dir {
        internal;
        alias /var/www/html/wp-content/blogs.dir;
    }
 
####################################################################################################
#### Server Block: File Uploads Settings ###########################################################
####################################################################################################

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }
    
    # deny running scripts inside writable directories
    # location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
    #     deny all;
    # }

####################################################################################################
#### Server Block: Indexing + Try Files Settings ###################################################
####################################################################################################
    
    ## redirect index.php requests ##
    if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }
    
    ## force trailing slash on */wp-admin requests ##
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    
    ## try files order ##
    location / {
        ## first try files, then directories, otherwise query index
        try_files $uri $uri/ /index.php?$args;
	## force trailing slashes on urls (do not enable for bbPress/BuddyPress sites)
        # rewrite ^([^.]*[^/])$ $1/ permanent;
    }
    
    ## hidden files (block access) ##
    location ~ /\. {
        ## do not enable if using Certbot, Git, etc ##
	# deny all;
    }
    
    ## Certbot domain verification ##
    location = /.well-known* {
        # default_type "text/plain";
        allow all;
    }

####################################################################################################
#### Server Block: FastCGI Cache Settings ##########################################################
####################################################################################################

## several common URI patterns are configured to skip FastCGI caching to avoid conflicts ##
## ensure your site follows correct URI spelling e.g. /cart and /checkout (etc) ##

    ## set to either 1/0 to skip fastcgi cache by default ##
    set $skip_cache @FCGI_CACHE;
    
    ## post requests should always skip the cache
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    
    ## query strings should always skip the cache
    if ($query_string != "") {
        set $skip_cache 1;
    }
    
    ## sensitive wordpress urls should always skip the cache
    if ($request_uri ~* "index.php|/account.*|/cart.*|/checkout.*|/contact.*|/dashboard.*|/login.*|/my-.*|/order.*|/profile.*|/register.*|/settings.*|/view.*|/wc-api.*|/wp-admin.*|wp-.*.php") {
        set $skip_cache 1;
    }
    
    ## logged in users or recent commenters etc should always skip the cache
    if ($http_cookie ~* "wordpress_logged_in|wp-postpass|woocommerce_items_in_cart|woocommerce_cart_hash|comment_author") {
        set $skip_cache 1;
    }
    
    ## woocommerce cart actions should always skip the cache
    # if ($arg_add-to-cart != "") {
    #    set $skip_cache 1;
    # }
    
    ## woocommerce shoppers should always skip the cache
    # if ($http_cookie ~* "cookie_woocommerce_items_in_cart") {
    #    set $skip_cache 1;
    # }
    
    ## woocommerce shoppers should always skip the cache
    # if ($cookie_woocommerce_items_in_cart != "0") {
    #    set $skip_cache 1;
    # }

####################################################################################################
#### Server Block: PHP-FPM Routing + FastCGI Routing Settings ######################################
####################################################################################################

    location ~ \.php$ {
        set $rt_session "";
        if ($http_cookie ~* "wp_woocommerce_session_[^=]*=([^%]+)%7C") {
                set $rt_session wp_woocommerce_session_$1;
        }	
        if ($skip_cache = 0 ) {
                more_clear_headers "Set-Cookie*";
                set $rt_session "";
        }

        ## include /etc/nginx/fastcgi_params for older nginx versions
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/var/run/php/php7.2-fpm.sock
	## fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	fastcgi_pass 127.0.0.1:9000;
	fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 404 @CACHEVALID;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        ## below line should not be needed
        # include snippets/fastcgi-php.conf;
    }

####################################################################################################
#### Server Block: WP-Login Settings (Rate Limiting) ###############################################
####################################################################################################

    location = /wp-login.php {
        ## limit access to one request per second per IP address
        limit_req zone=one burst=1 nodelay;
        ## we must re-include this routing for php-fpm ##
        include /etc/nginx/fastcgi.conf;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/var/run/php/php7.2-fpm.sock
	## fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	fastcgi_pass 127.0.0.1:9000;
	fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 301 404 @CACHEVALID;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
    }
    
####################################################################################################
#### Server Block: Staging URI Settings (Supports WP-Staging, Etc) #################################
####################################################################################################
    
    location /staging* {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /staging/index.php?$args;
        ## tweak FastCGI Cache (needs to be improved with mild cache settings) ##
        include /etc/nginx/fastcgi.conf;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ## fastcgi_pass unix:/run/php/php7.2-fpm.sock;
	fastcgi_pass 127.0.0.1:9000;
        fastcgi_read_timeout 300;
        fastcgi_index index.php;
        fastcgi_cache off;
    }

####################################################################################################
#### Server Block: Static Resource Settings (Expiration Headers) ###################################
####################################################################################################

    ## CloudFlare (or CDNs) overwrite these headers ##
    location ~* \.(atom|bmp|bz2|css|doc|docx|eot|gif|gz|ico|jpeg|jpg|js|mid|midi|mp4|ogg|ogv|otf|png|ppt|rar|rss|rtf|svg|svgz|tar|tgz|ttf|wav|woff|xls|zip)$ {
        expires max;
    }

####################################################################################################
#### Server Block: Browser Resource (Render) Settings ##############################################
####################################################################################################

    location ~ \.(eot|ttf|ttc|otf|woff|woff2|svg|css|js)$ {
        ## avoid render security errors in certain browsers e.g. Firefox/IE ##
        add_header Access-Control-Allow-Origin "*";
	expires max;
    }
    
####################################################################################################
#### Server Block: Favicon Settings ################################################################
####################################################################################################

    location = /favicon.ico {
        ## 204 error better than 404 error if not found ##
        try_files $uri =204;
    }
    
####################################################################################################
#### Server Block: Robots.txt Settings (Optimized For Virtual Robots.txt MU Plugin) ################
####################################################################################################
    
    location = /robots.txt {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /index.php?$args;
	allow all;
    }
    
####################################################################################################
#### Server Block: Ads.txt Settings (Optimized For Virtual Ads.txt MU Plugin) ######################
####################################################################################################
    
    location = /ads.txt {
        ## first try files, then directories, otherwise query index ##
        try_files $uri $uri/ /index.php?$args;
	allow all;
    }
    
####################################################################################################
#### Server Block: Custom Functions (MU Plugin) Settings ###########################################
####################################################################################################
    
    location = /wp-content/functions.php {
	deny all;
    }
    
####################################################################################################
#### Server Block: Plugin Blacklist (MU Plugin) Settings ###########################################
####################################################################################################
    
    location = /wp-content/blacklist.txt {
	deny all;
    }
    
####################################################################################################
#### Server Block: Git Configuration Settings ######################################################
####################################################################################################

    location = /.git/config {
        deny all;
    }
    
####################################################################################################
#### Server Block: Deny Access To Various (Unsafe + Unused) WordPress Core Files ###################
####################################################################################################

    ## WP directories ##
    location ~* /(?:wp-includes|wp-content|mu-plugins|uploads)/.*\.php$ {
        deny all;
    }
    
    ## WP meta files ##
    location ~* (license|licence|readme)\.(htm|html|txt) {
	deny all;
    }
    
    ## wp-config ##
    location = /wp-config*.php {
	deny all;
    }
    
    ## XML-RPC ##
    location = /xmlrpc.php {
	deny all;
    }
    
    ## wp-mail ##
    location = /wp-mail.php {
	deny all;
    }
    
    ## wp-links-opml ##
    location = /wp-links-opml.php {
	deny all;
    }
    
    ## wp-trackback ##
    location = /wp-trackback.php {
	deny all;
    }
    
    ## WP debug logs ##
    location ~ /wp-content/debug\.log {
	deny all;
    }

####################################################################################################
#### Server Block: Custom Settings For Popular Third-Party WordPress Plugins #######################
####################################################################################################
    
    ## Easy Digital Downloads ##
    location ~ ^/wp-content/uploads/edd/(.*?)\.zip$ {
        rewrite / permanent;
    }
    
    ## more coming soon... ##
    
    
## DO NOT REMOVE THIS CURLY BRACKET ᕦ⊙෴⊙ᕤ ##
}

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://wordpress.org/support/article/nginx/
## Ref: https://computingforgeeks.com/how-to-setup-wordpress-multisite-network-nginx-letsencrypt/
## Ref: https://easyengine.io/wordpress-nginx/tutorials/multisite/subdomains/minimal/
## Ref: https://easyengine.io/wordpress-nginx/tutorials/multisite/subdomains/minimal/#comment-42709
## Ref: https://easyengine.io/wordpress-nginx/tutorials/multisite/subdirectories/minimal/
## Ref: https://premium.wpmudev.org/blog/wordpress-multisite-wordpress-nginx/
## Ref: https://stackoverflow.com/questions/21687288/nginx-redirect-loop-remove-index-php-from-url/21813759#21813759
## Ref: https://wordpress.org/plugins/wordpress-mu-domain-mapping/
## Ref: https://stackoverflow.com/questions/4833238/nginx-conf-redirect-multiple-conditions/45504231#45504231
## Ref: https://gist.github.com/evansolomon/2274120
## Ref: https://premium.wpmudev.org/blog/wordpress-multisite-wordpress-nginx/
## Ref: https://serverfault.com/questions/578648/properly-setting-up-a-default-nginx-server-for-https
## Ref: https://stackoverflow.com/questions/6246490/wordpress-subdomain-multisite-nginx-media-library
## Ref: https://gist.github.com/centminmod/9034414
## Ref: https://stackoverflow.com/questions/29123222/wordpress-multisite-directory-nginx-config
## Ref: https://premium.wpmudev.org/forums/topic/ssl-on-domain-mapping-with-wp-multisite/
## Ref: https://core.trac.wordpress.org/ticket/18852
## Ref: https://github.com/bradp/vv/issues/355
## Ref: https://github.com/roots/wordpress-nginx/blob/master/templates/default/wordpress-common.erb
## Ref: https://snippets.cacher.io/snippet/797464509dbb045262f4
## Ref: https://forum.nginx.org/read.php?9,219980
